name: Run Selenium Tests2

on: [push, pull_request]

jobs:
  selenium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install selenium webdriver-manager

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1280x1024x16 &
        env:
          DISPLAY: ":99"

      - name: Run Selenium script
        run: |
          python test_google.py > test_results.log || exit 0
          cat test_results.log
      

    
      - name: Take a screenshot of failure
        if: failure()  # Only run if the previous step fails
        run: |
          mkdir -p screenshots
          echo "Taking a screenshot..."
          python take_screenshot.py  # Ensure this script saves dynamically named screenshots in the `screenshots/` folder

          # Capture the latest screenshot path and save it to logs
          LATEST_SCREENSHOT=$(ls -Art screenshots | tail -n 1)
          echo "Screenshot path: screenshots/$LATEST_SCREENSHOT" >> screenshot_paths.log
          cat screenshot_paths.log >> test_results.log  # Append to test results log for reference
          echo "Screenshot taken and path logged."

      - name: Upload screenshots and logs
        id: upload_screenshots
        if: failure()  # Only upload if the previous step fails
        uses: actions/upload-artifact@v3
        with:
          name: screenshots_and_logs
          path: |
            screenshots/
            test_results.log
            screenshot_paths.log
          retention-days: 7  # Keep for 7 days

      - name: Notify on failure
        if: failure()
        run: |
          echo "A failure occurred. Check the screenshots and logs here: ${{ steps.upload_screenshots.outputs.artifact_url }}"
          # Integrate with a notification service as needed

      